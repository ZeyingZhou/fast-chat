{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/middleware.ts"],"sourcesContent":["// src/middleware.ts\nimport { NextResponse } from 'next/server';\nimport type { NextRequest } from 'next/server';\n\nconst isPublicPage = (pathname: string) => {\n  return pathname === '/auth';\n};\n\nexport function middleware(request: NextRequest) {\n  const storedAuth = request.cookies.get('auth-storage')?.value;\n  const token = storedAuth ? JSON.parse(storedAuth)?.state?.token : null;\n\n  if (!isPublicPage(request.nextUrl.pathname) && !token) {\n    return NextResponse.redirect(new URL('/auth', request.url));\n  }\n\n  if (isPublicPage(request.nextUrl.pathname) && token) {\n    return NextResponse.redirect(new URL('/', request.url));\n  }\n\n  return NextResponse.next();\n}\n\nexport const config = {\n  matcher: [\"/((?!.*\\\\..*|_next).*)\", \"/\", \"/(api|trpc)(.*)\"],\n};"],"names":[],"mappings":"AAAA,oBAAoB;;;;;AACpB;AAAA;;AAGA,MAAM,eAAe,CAAC;IACpB,OAAO,aAAa;AACtB;AAEO,SAAS,WAAW,OAAoB;IAC7C,MAAM,aAAa,QAAQ,OAAO,CAAC,GAAG,CAAC,iBAAiB;IACxD,MAAM,QAAQ,aAAa,KAAK,KAAK,CAAC,aAAa,OAAO,QAAQ;IAElE,IAAI,CAAC,aAAa,QAAQ,OAAO,CAAC,QAAQ,KAAK,CAAC,OAAO;QACrD,OAAO,qLAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,SAAS,QAAQ,GAAG;IAC3D;IAEA,IAAI,aAAa,QAAQ,OAAO,CAAC,QAAQ,KAAK,OAAO;QACnD,OAAO,qLAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,KAAK,QAAQ,GAAG;IACvD;IAEA,OAAO,qLAAA,CAAA,eAAY,CAAC,IAAI;AAC1B;AAEO,MAAM,SAAS;IACpB,SAAS;QAAC;QAA0B;QAAK;KAAkB;AAC7D"}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}