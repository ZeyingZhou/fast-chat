{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///Users/zeyingzhou/Desktop/fullstack-messenger-app/fast-chat/frontend/src/store/auth.ts"],"sourcesContent":["// src/store/auth-store.ts\nimport { create } from 'zustand';\nimport { persist } from 'zustand/middleware';\n\ninterface User {\n  id: number;\n  username: string;\n  email: string;\n}\n\ninterface AuthState {\n  user: User | null;\n  token: string | null;\n  setUser: (user: User | null) => void;\n  setToken: (token: string | null) => void;\n  fetchUser: () => Promise<void>;\n  signIn: (email: string, password: string) => Promise<void>;\n  signUp: (username: string, email: string, password: string) => Promise<void>;\n  signOut: () => void;\n}\n\nexport const useAuthStore = create<AuthState>()(\n  persist(\n    (set, get) => ({\n      user: null,\n      token: null,\n      setUser: (user) => set({ user }),\n      setToken: (token) => set({ token }),\n\n      fetchUser: async () => {\n        const { token } = get();\n        if (!token) return;\n\n        const response = await fetch('http://localhost:8000/users/me', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n\n        if (!response.ok) {\n          throw new Error('Failed to fetch user');\n        }\n\n        const userData = await response.json();\n        set({ user: userData });\n      },\n\n      signIn: async (email, password) => {\n        const response = await fetch('http://localhost:8000/token', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n          },\n          body: new URLSearchParams({\n            username: email,\n            password: password,\n          }),\n        });\n\n        if (!response.ok) {\n          throw new Error('Sign in failed');\n        }\n\n        const data = await response.json();\n        set({ token: data.access_token });\n        await get().fetchUser();\n      },\n\n      signUp: async (username, email, password) => {\n        const response = await fetch('http://localhost:8000/users/', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            username,\n            email,\n            password,\n          }),\n        });\n\n        if (!response.ok) {\n          throw new Error('Sign up failed');\n        }\n\n        await get().signIn(email, password);\n      },\n\n      signOut: () => {\n        set({ user: null, token: null });\n      },\n    }),\n    {\n      name: 'auth-storage',\n    }\n  )\n);"],"names":[],"mappings":"AAAA,0BAA0B;;;;AAC1B;AACA;;;AAmBO,MAAM,eAAe,CAAA,GAAA,wIAAA,CAAA,SAAM,AAAD,IAC/B,CAAA,GAAA,6IAAA,CAAA,UAAO,AAAD,EACJ,CAAC,KAAK,MAAQ,CAAC;QACb,MAAM;QACN,OAAO;QACP,SAAS,CAAC,OAAS,IAAI;gBAAE;YAAK;QAC9B,UAAU,CAAC,QAAU,IAAI;gBAAE;YAAM;QAEjC,WAAW;YACT,MAAM,EAAE,KAAK,EAAE,GAAG;YAClB,IAAI,CAAC,OAAO;YAEZ,MAAM,WAAW,MAAM,MAAM,kCAAkC;gBAC7D,SAAS;oBACP,iBAAiB,CAAC,OAAO,EAAE,OAAO;gBACpC;YACF;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,IAAI,MAAM;YAClB;YAEA,MAAM,WAAW,MAAM,SAAS,IAAI;YACpC,IAAI;gBAAE,MAAM;YAAS;QACvB;QAEA,QAAQ,OAAO,OAAO;YACpB,MAAM,WAAW,MAAM,MAAM,+BAA+B;gBAC1D,QAAQ;gBACR,SAAS;oBACP,gBAAgB;gBAClB;gBACA,MAAM,IAAI,gBAAgB;oBACxB,UAAU;oBACV,UAAU;gBACZ;YACF;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,IAAI,MAAM;YAClB;YAEA,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,IAAI;gBAAE,OAAO,KAAK,YAAY;YAAC;YAC/B,MAAM,MAAM,SAAS;QACvB;QAEA,QAAQ,OAAO,UAAU,OAAO;YAC9B,MAAM,WAAW,MAAM,MAAM,gCAAgC;gBAC3D,QAAQ;gBACR,SAAS;oBACP,gBAAgB;gBAClB;gBACA,MAAM,KAAK,SAAS,CAAC;oBACnB;oBACA;oBACA;gBACF;YACF;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,IAAI,MAAM;YAClB;YAEA,MAAM,MAAM,MAAM,CAAC,OAAO;QAC5B;QAEA,SAAS;YACP,IAAI;gBAAE,MAAM;gBAAM,OAAO;YAAK;QAChC;IACF,CAAC,GACD;IACE,MAAM;AACR"}},
    {"offset": {"line": 118, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 124, "column": 0}, "map": {"version":3,"sources":["file:///Users/zeyingzhou/Desktop/fullstack-messenger-app/fast-chat/frontend/src/providers/auth-provider.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect } from 'react';\nimport { usePathname, useRouter } from 'next/navigation';\nimport { useAuthStore } from '@/store/auth';\n\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\n  const router = useRouter();\n  const pathname = usePathname();\n  const { token, fetchUser } = useAuthStore();\n\n  useEffect(() => {\n    // Verify token and fetch user data on initial load\n    if (token) {\n      fetchUser().catch(() => {\n        useAuthStore.getState().signOut();\n        if (!isPublicRoute(pathname)) {\n          router.push('/sign-in');\n        }\n      });\n    }\n  }, [token]);\n\n  const isPublicRoute = (path: string) => {\n    return path === '/sign-in' || path === '/sign-up';\n  };\n\n  return <>{children}</>;\n}"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAMO,SAAS,aAAa,EAAE,QAAQ,EAAiC;IACtE,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,WAAW,CAAA,GAAA,kIAAA,CAAA,cAAW,AAAD;IAC3B,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,oHAAA,CAAA,eAAY,AAAD;IAExC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,mDAAmD;QACnD,IAAI,OAAO;YACT,YAAY,KAAK,CAAC;gBAChB,oHAAA,CAAA,eAAY,CAAC,QAAQ,GAAG,OAAO;gBAC/B,IAAI,CAAC,cAAc,WAAW;oBAC5B,OAAO,IAAI,CAAC;gBACd;YACF;QACF;IACF,GAAG;QAAC;KAAM;IAEV,MAAM,gBAAgB,CAAC;QACrB,OAAO,SAAS,cAAc,SAAS;IACzC;IAEA,qBAAO;kBAAG;;AACZ"}},
    {"offset": {"line": 160, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}